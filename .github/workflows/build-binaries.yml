name: Build Binaries

on:
  # push:
  #   branches: [main]
  #   tags:
  #     - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python --version

      - name: Install dependencies (Unix)
        if: runner.os != 'Windows'
        run: |
          chmod +x scripts/install_deps.sh
          ./scripts/install_deps.sh

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          python -m venv venv
          source venv/Scripts/activate
          python -m pip install --upgrade pip
          pip install -e "./markitdown/packages/markitdown[all]"
          pip install -r requirements-build.txt

      - name: Build binary (Unix)
        if: runner.os != 'Windows'
        run: |
          source venv/bin/activate
          python scripts/build.py

      - name: Build binary (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          source venv/Scripts/activate
          python scripts/build.py

      - name: Test binary (Unix)
        if: runner.os != 'Windows'
        run: |
          source venv/bin/activate
          python scripts/test_binary.py

      - name: Test binary (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          source venv/Scripts/activate
          python scripts/test_binary.py

      - name: Get platform name
        id: platform
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            echo "name=linux" >> $GITHUB_OUTPUT
          elif [ "${{ runner.os }}" = "macOS" ]; then
            echo "name=darwin" >> $GITHUB_OUTPUT
          elif [ "${{ runner.os }}" = "Windows" ]; then
            echo "name=win32" >> $GITHUB_OUTPUT
          fi

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: markitdown-${{ steps.platform.outputs.name }}
          path: bin/${{ steps.platform.outputs.name }}/*
          retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release archives
        run: |
          mkdir -p release
          cd artifacts

          # Linux
          cd markitdown-linux
          tar -czf ../../release/markitdown-linux-x64.tar.gz *
          cd ..

          # macOS
          cd markitdown-darwin
          tar -czf ../../release/markitdown-macos-x64.tar.gz *
          cd ..

          # Windows
          cd markitdown-win32
          zip -r ../../release/markitdown-windows-x64.zip *
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
